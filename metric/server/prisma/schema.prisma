// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Platform {
  id        String       @id @default(uuid())
  name      String
  resources Resource[]
  users     Identifier[]
}

model Project {
  id          String     @id @default(uuid())
  name        String
  description String     @default("")
  resources   Resource[]
  members     Member[]
}

model Resource {
  id         String   @id @default(uuid())
  name       String
  platform   Platform @relation(fields: [platformId], references: [id])
  project    Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  platformId String
  projectId  String
  params     String   @default("")
  metrics    Metric[]
}

model Metric {
  id            String   @id @default(uuid())
  name          String
  resource      Resource @relation(fields: [resourceId], references: [id], onDelete: Cascade)
  resourceId    String
  snapshotBased Boolean  @default(false)
  params        String   @default("")
}

model Admin {
  id       String @id @default(uuid())
  name     String
  email    String
  password String
}

model User {
  id          String       @id @default(uuid())
  name        String
  identifiers Identifier[]
  memberships Member[]
}

model Identifier {
  id         String   @id @default(uuid())
  platform   Platform @relation(fields: [platformId], references: [id])
  platformId String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  value      String
}

model Member {
  id        String   @id @default(uuid())
  project   Project  @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  roles     String[]
}
